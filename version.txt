# DriverUpdate.ps1
# Log file path
$logPath = "C:\Windows\mitll\Logs\MS_Update.txt"

# Function to log messages
function Write-UpdateLog {
    param([string]$Message)
    $timestamp = Get-Date -Format "MM/dd/yyyy HH:mm:ss"
    "$timestamp - $Message" | Out-File -Append -FilePath $logPath
}

Write-UpdateLog "===== Driver Update Started ====="

# Set registry for driver updates
Write-UpdateLog "Setting registry for driver updates..."
Set-itemproperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate' -Name SetPolicyDrivenUpdateSourceForDriverUpdates -Value 0 -ErrorAction SilentlyContinue

# Install PSWindowsUpdate module if not present
Write-UpdateLog "Checking for PSWindowsUpdate module..."
if (-not (Get-Module -ListAvailable -Name PSWindowsUpdate)) {
    Write-UpdateLog "Installing PSWindowsUpdate module..."
    try {
        Install-Module -Name PSWindowsUpdate -Force -ErrorAction Stop
        Write-UpdateLog "PSWindowsUpdate module installed successfully."
    } catch {
        Write-UpdateLog "ERROR: Failed to install PSWindowsUpdate - $($_.Exception.Message)"
        exit 1
    }
}

# Import the module
Write-UpdateLog "MODULE_IMPORT: Importing PSWindowsUpdate module..."
try {
    Import-Module PSWindowsUpdate -Force -ErrorAction Stop
    Write-UpdateLog "MODULE_READY: PSWindowsUpdate module imported successfully."
} catch {
    Write-UpdateLog "ERROR: Failed to import PSWindowsUpdate - $($_.Exception.Message)"
    exit 1
}

# Run Windows Update for drivers
Write-UpdateLog "SCAN_START: Scanning for driver updates..."
try {
    $updates = Install-WindowsUpdate -MicrosoftUpdate -AcceptAll -IgnoreReboot -Verbose
    
    if ($updates) {
        Write-UpdateLog "UPDATES_FOUND: Driver updates available"
        Write-UpdateLog "DOWNLOAD_START: Downloading driver updates..."
        
        $rebootNeeded = $false
		foreach ($update in $updates) {
			$sizeInMB = [math]::Round($update.Size / 1MB, 2)
			$kbInfo = if ($update.KB) { " (KB$($update.KB))" } else { "" }
			Write-UpdateLog "  - $($update.Title)$kbInfo - Size: $sizeInMB MB"
			if ($update.RebootRequired) {
				$rebootNeeded = $true
    }
}
        
        Write-UpdateLog "INSTALL_START: Installing driver updates..."
        Write-UpdateLog "INSTALL_COMPLETE: Driver updates installed successfully"
        
        if ($rebootNeeded) {
            Write-UpdateLog "REBOOT_REQUIRED: System restart is required to complete installation"
        }
    } else {
        Write-UpdateLog "NO_UPDATES: No driver updates available - system is up to date"
    }
    
    Write-UpdateLog "Driver update process completed."
} catch {
    Write-UpdateLog "ERROR: Failed to check/install updates - $($_.Exception.Message)"
}

# Reset registry
Write-UpdateLog "Resetting registry..."
Set-itemproperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate' -Name SetPolicyDrivenUpdateSourceForDriverUpdates -Value 1 -ErrorAction SilentlyContinue

# Check BitLocker and suspend if needed
Write-UpdateLog "Checking BitLocker status..."
try {
    $bitlockerstatus = get-bitlockervolume -mountpoint "c:"
    if ($bitlockerstatus.ProtectionStatus -eq 'On') {
        Write-UpdateLog "BitLocker is enabled, suspending for next reboot..."
        Suspend-BitLocker -MountPoint "C:" -RebootCount 1
        Write-UpdateLog "BitLocker suspended successfully."
    } else {
        Write-UpdateLog "BitLocker is not enabled."
    }
} catch {
    Write-UpdateLog "ERROR: BitLocker check failed - $($_.Exception.Message)"
}

Write-UpdateLog "===== Driver Update Completed ====="
