#Requires -RunAsAdministrator

# Function to check if a registry path exists, create it if it doesn't
function Ensure-RegistryPath {
    param (
        [string]$HivePath,
        [string]$SubPath
    )
    $fullPath = Join-Path $HivePath $SubPath
    if (-not (Test-Path $fullPath)) {
        New-Item -Path $fullPath -Force | Out-Null
    }
}

# Function to set a registry value
function Set-RegistryValue {
    param (
        [string]$HivePath,
        [string]$SubPath,
        [string]$Name,
        $Value,
        [string]$Type
    )
    $fullPath = Join-Path $HivePath $SubPath
    Ensure-RegistryPath -HivePath $HivePath -SubPath $SubPath
    Set-ItemProperty -Path $fullPath -Name $Name -Value $Value -Type $Type -Force
}

try {
    # Get all user profiles, excluding system profiles
    $userProfiles = Get-WmiObject -Class Win32_UserProfile | Where-Object {
        $_.Special -eq $false -and 
        $_.SID -notmatch "S-1-5-(18|19|20)" # Exclude SYSTEM, LOCAL SERVICE, NETWORK SERVICE
    }

    foreach ($profile in $userProfiles) {
        try {
            $sid = $profile.SID
            $localPath = $profile.LocalPath
            $userName = Split-Path $localPath -Leaf

            # File operations
            $sapCommonPath = Join-Path $localPath "AppData\Roaming\SAP\Common"
            $sapBackupPath = Join-Path $localPath "AppData\Roaming\SAP\GUI_Backup_Files"

            if (Test-Path $sapCommonPath) {
                # Copy Common folder to GUI_Backup_Files
                Copy-Item -Path $sapCommonPath -Destination $sapBackupPath -Recurse -Force -ErrorAction SilentlyContinue
                # Delete Common folder
                Remove-Item -Path $sapCommonPath -Recurse -Force -ErrorAction SilentlyContinue
            }

            # Load user's registry hive
            $hivePath = "HKU:\$sid"
            $tempHive = "HKLM:\TempHive_$sid"
            $ntuserPath = Join-Path $localPath "NTUSER.DAT"

            if (Test-Path $ntuserPath) {
                try {
                    # Load the user's registry hive
                    reg load HKLM\TempHive_$sid $ntuserPath | Out-Null

                    # Registry changes for HKEY_CURRENT_USER\SOFTWARE\SAP\General
                    $sapGeneralPath = "SOFTWARE\SAP\General"
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapGeneralPath -Name "BrowserControl" -Value 1 -Type DWord
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapGeneralPath -Name "SAPDockAllowMoveSave" -Value 0 -Type DWord
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapGeneralPath -Name "SAPGUIControlPlugin" -Value 0 -Type DWord
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapGeneralPath -Name "Language" -Value "EN" -Type String

                    # Registry changes for HKEY_CURRENT_USER\Software\SAP\SAPGUI Front and SAPLogon
                    $sapFrontendPath = "Software\SAP\SAPGUI Front\SAP Frontend Server\LocalData"
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapFrontendPath -Name "ImportedToSQLite" -Value 1 -Type DWord

                    $sapLogonOptionsPath = "Software\SAP\SAPLogon\Options"
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapLogonOptionsPath -Name "LandscapeFileOnServer" -Value "https://PLACEHOLDER" -Type ExpandString
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapLogonOptionsPath -Name "AllowCachingServerConfigFiles" -Value 1 -Type DWord

                    $sapAppearancePath = "Software\SAP\General\Appearance"
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapAppearancePath -Name "SelectedTheme" -Value 1 -Type DWord
                    Set-RegistryValue -HivePath $tempHive -SubPath $sapAppearancePath -Name "SelectedFallbackTheme" -Value 1 -Type DWord
                }
                finally {
                    # Unload the registry hive
                    [gc]::Collect()
                    reg unload HKLM\TempHive_$sid | Out-Null
                }
            }
        }
        catch {
            Write-Warning "Error processing profile for SID '$sid': $_"
        }
    }

    Write-Host "SAP configuration completed for all user profiles."
}
catch {
    Write-Error "An error occurred: $_"
}
